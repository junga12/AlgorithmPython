# 14500 테트로미노 https://www.acmicpc.net/problem/14500
#

tetromino = [
    [(0, 0), (0, 1), (1, 0), (1, 1)], # ㅁ
    [(0, 0), (0, 1), (0, 2), (0, 3)], # ㅡ
    [(0, 0), (1, 0), (2, 0), (3, 0)], # ㅣ

    [(0, 0), (0, 1), (0, 2), (1, 1)], # ㅜ
    [(0, 1), (1, 0), (1, 1), (1, 2)], # ㅗ
    [(0, 0), (1, 0), (2, 0), (1, 1)], # ㅏ
    [(1, 0), (0, 1), (1, 1), (2, 1)], # ㅓ

    [(0, 0), (0, 1), (1, 1), (1, 2)], # ㄹ(?)
    [(0, 1), (1, 0), (1, 1), (2, 0)],
    [(0, 0), (1, 0), (1, 1), (2, 1)],
    [(1, 0), (0, 1), (1, 1), (0, 2)],

    [(0, 0), (0, 1), (1, 1), (2, 1)], # ㄱ
    [(0, 0), (1, 0), (2, 0), (2, 1)], # ㄴ
    [(0, 0), (0, 1), (1, 0), (2, 0)],
    [(0, 1), (1, 1), (2, 1), (2, 0)],
    [(0, 0), (0, 1), (0, 2), (1, 0)],
    [(0, 2), (1, 0), (1, 1), (1, 2)],
    [(0, 0), (1, 0), (1, 1), (1, 2)],
    [(0, 0), (0, 1), (0, 2), (1, 2)]
]

if __name__ == '__main__':
    n, m = map(int, input().split()) # 4 <= n, m <= 500
    paper = [list(map(int, input().split())) for _ in range(n)]

    l = len(tetromino)
    answer = 0
    for i in range(n):
        for j in range(m):
            for a in range(l): # 테트로미노 종류
                s = 0
                for b in range(4):  # 블록수
                    try:
                        s += paper[i+tetromino[a][b][0]][j+tetromino[a][b][1]]
                    except IndexError:
                        break
                    else:
                        answer = max(answer, s)
    print(answer)